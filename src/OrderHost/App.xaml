<Application x:Class="Collector.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/AppColor.xaml"/>
                <ResourceDictionary>
                    <Style x:Key="ActionButtonStyle" TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="{StaticResource DrakPrimary}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource DrakPrimary}"/>
                        <Setter Property="Foreground" Value="{DynamicResource TextIcon}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="24"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Viewbox Width="24" Height="24">
                                                <Canvas Width="24" Height="24">
                                                    <Path  Data="M19,8L15,12H18A6,6 0 0,1 12,18C11,18 10.03,17.75 9.2,17.3L7.74,18.76C8.97,19.54 10.43,20 12,20A8,8 0 0,0 20,12H23M6,12A6,6 0 0,1 12,6C13,6 13.97,6.25 14.8,6.7L16.26,5.24C15.03,4.46 13.57,4 12,4A8,8 0 0,0 4,12H1L5,16L9,12"
                                                  Fill="{DynamicResource TextIcon}" Height="12.632" Canvas.Left="8" Stretch="Fill" Canvas.Top="5.351" Width="12" />
                                                </Canvas>
                                            </Viewbox>
                                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="2,4,5,4" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Column="1"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsDefaulted" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Foreground" Value="{StaticResource PrimaryText}"/>
                                            <Setter Property="Background" Value="{StaticResource Primary}"/>
                                            <Setter Property="Cursor" Value="Hand"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter Property="Background" TargetName="border" Value="{StaticResource Primary}"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Primary}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Background" TargetName="border" Value="{StaticResource SecondText}"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SecondText}"/>
                                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource lightBlack}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="Padding" Value="4,1"/>
                        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="Foreground" Value="{StaticResource PrimaryText}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="IsEnabled" Value="{Binding Available, UpdateSourceTrigger=PropertyChanged}"/>
                        <Setter Property="ToolTip" Value="{Binding Comments, Mode=OneWay}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="2"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Label Grid.Column="1" Content="{Binding DrinkName}" Foreground="{TemplateBinding Foreground}"
                                                   VerticalContentAlignment="Center" Padding="5,1,5,1" Margin="0,0,2,0"/>
                                            <Label Grid.Column="2" Content="{Binding UserName, Mode=OneWay}" Foreground="{TemplateBinding Foreground}"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Primary}"/>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Primary}"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource DrakPrimary}"/>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource DrakPrimary}"/>
                                            <Setter Property="Foreground"  Value="{StaticResource TextIcon}"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Primary}"/>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Primary}"/>
                                            <Setter Property="Foreground"  Value="{StaticResource TextIcon}"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="ExportButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource DrakPrimary}"/>
                <Setter Property="BorderBrush" Value="{StaticResource DrakPrimary}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextIcon}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="24"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Viewbox Width="24" Height="24">
                                        <Canvas Width="24" Height="24">
                                            <Path  Data="M23,12L19,8V11H10V13H19V16M1,18V6C1,4.89 1.9,4 3,4H15A2,2 0 0,1 17,6V9H15V6H3V18H15V15H17V18A2,2 0 0,1 15,20H3A2,2 0 0,1 1,18Z"
        										Fill="{DynamicResource TextIcon}" Height="12.632" Canvas.Left="8" Stretch="Fill" Canvas.Top="5.351" Width="12" />
                                        </Canvas>
                                    </Viewbox>
                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="2,4,5,4" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Column="1"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Foreground" Value="{StaticResource PrimaryText}"/>
                                    <Setter Property="Background" Value="{StaticResource Primary}"/>
                                    <Setter Property="Cursor" Value="Hand"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Primary}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Primary}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource SecondText}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SecondText}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource lightBlack}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
